#pr:
#  none

trigger:
  branches:
    exclude:
      - feature/*
      - NOJIRA*
      - nojira*

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: git-configurations
  - group: docker-configurations

steps:
  - task: JavaToolInstaller@0
    inputs:
      versionSpec: '17'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'
    displayName: 'Install Java17'
  - task: InstallSSHKey@0
    inputs:
      knownHostsEntry: $(knownHosts)
      sshPublicKey: $(publicKey)
      sshKeySecureFile: 'id_rsa'
    displayName: 'Install SSH'
  - task: DockerInstaller@0
    inputs:
      dockerVersion: '20.10.21'
    displayName: 'Install Docker'
  - script: |
      mvn clean test
    displayName: 'Compile & test'

  - script: |
      mvn package
    displayName: 'Create JAR'

  - script: |
      docker build --tag issuetracker:latest .
      docker images
    displayName: 'Create Docker Image'

  - script: |
      tag="$(git rev-parse --short HEAD)"
      docker tag issuetracker:latest adamsz1/issue-tracker:$tag
      docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
      docker push adamsz1/issue-tracker:$tag
    env:
        DOCKER_USERNAME: $(dockerhubUsername)
        DOCKER_PASSWORD: $(dockerhubPassword)
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
#    succeeded() helyett más condition értékek is lehetnek: always() , failure() stb...
    displayName: 'Push Docker Image'